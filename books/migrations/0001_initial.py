# Generated by Django 4.2 on 2024-09-14 09:11

from django.db import migrations, models
import django.db.models.deletion
import mptt.fields


class Migration(migrations.Migration):

    initial = True

    dependencies = [
    ]

    operations = [
        migrations.CreateModel(
            name='Author',
            fields=[
                ('id', models.AutoField(db_column='AuthorID', primary_key=True, serialize=False)),
                ('sirname', models.CharField(db_column='Фамилия', max_length=100, verbose_name='Фамилия')),
                ('name', models.CharField(db_column='Имя', max_length=100, verbose_name='Имя')),
                ('fathername', models.CharField(db_column='Отчество', max_length=100, verbose_name='Отчество')),
            ],
            options={
                'verbose_name': 'Автор',
                'verbose_name_plural': 'Авторы',
                'db_table': 'Author',
            },
        ),
        migrations.CreateModel(
            name='Book',
            fields=[
                ('id', models.AutoField(db_column='BookID', primary_key=True, serialize=False)),
                ('title', models.CharField(db_column='Название книги', max_length=100, verbose_name='Название')),
                ('year', models.IntegerField(db_column='Год издания', default=0, verbose_name='Год')),
                ('tom', models.IntegerField(db_column='Номер тома', default=0, verbose_name='Номер тома')),
                ('pages', models.IntegerField(db_column='Количество страниц', default=0, verbose_name='Страницы')),
                ('status', models.BooleanField(choices=[(False, 'Не прочитано'), (True, 'Прочитано')], default=0, verbose_name='Прочитано')),
                ('controler', models.BooleanField(choices=[(False, 'Отложить'), (True, 'К прочтению')], default=0, verbose_name='На контроле')),
                ('images_path', models.ImageField(blank=True, upload_to='books/static/books/images')),
                ('file_path', models.FileField(blank=True, upload_to='books/static/books/e_books')),
                ('review', models.CharField(db_column='Рецензия', max_length=100, verbose_name='Рецензия')),
                ('author', models.ForeignKey(db_column='AuthorID', null=True, on_delete=django.db.models.deletion.CASCADE, to='books.author', verbose_name='Автор')),
            ],
            options={
                'verbose_name': 'книга',
                'verbose_name_plural': 'книги',
                'db_table': 'Books',
            },
        ),
        migrations.CreateModel(
            name='Cover',
            fields=[
                ('id', models.AutoField(db_column='CoverID', primary_key=True, serialize=False)),
                ('cover', models.CharField(db_column='Тип обложки', max_length=50, verbose_name='Тип обложки')),
            ],
            options={
                'verbose_name': 'Тип обложки',
                'verbose_name_plural': 'Типы обложек',
                'db_table': 'Cover',
            },
        ),
        migrations.CreateModel(
            name='Editor',
            fields=[
                ('id', models.AutoField(db_column='EditorID', primary_key=True, serialize=False)),
                ('name', models.CharField(db_column='Издательство', max_length=100, verbose_name='Издательство')),
                ('city', models.CharField(db_column='Город', max_length=100, verbose_name='Город')),
            ],
            options={
                'verbose_name': 'Издательство',
                'verbose_name_plural': 'Издательства',
                'db_table': 'Editor',
            },
        ),
        migrations.CreateModel(
            name='Format',
            fields=[
                ('id', models.AutoField(db_column='FormatID', primary_key=True, serialize=False)),
                ('format', models.CharField(db_column='Формат книги', max_length=10, verbose_name='Форматы книг')),
            ],
            options={
                'verbose_name': 'Формат книги',
                'verbose_name_plural': 'Форматы книг',
                'db_table': 'Format',
            },
        ),
        migrations.CreateModel(
            name='Seria',
            fields=[
                ('id', models.AutoField(db_column='SeriaID', primary_key=True, serialize=False)),
                ('seria', models.CharField(db_column='Серия книг', max_length=50, verbose_name='Серии книг')),
            ],
            options={
                'verbose_name': 'Серия книг',
                'verbose_name_plural': 'Серии книг',
                'db_table': 'Seria',
            },
        ),
        migrations.CreateModel(
            name='Tag',
            fields=[
                ('id', models.AutoField(db_column='TagID', primary_key=True, serialize=False)),
                ('name', models.CharField(db_column='Name', max_length=100)),
            ],
            options={
                'verbose_name': 'Тег',
                'verbose_name_plural': 'Теги',
                'db_table': 'Tag',
            },
        ),
        migrations.CreateModel(
            name='Type',
            fields=[
                ('id', models.AutoField(db_column='TypeID', primary_key=True, serialize=False)),
                ('type', models.CharField(db_column='Тип книги', max_length=20, verbose_name='Типы книг')),
            ],
            options={
                'verbose_name': 'Тип книги',
                'verbose_name_plural': 'Типы книг',
                'db_table': 'Type',
            },
        ),
        migrations.CreateModel(
            name='Theme',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('title', models.CharField(max_length=50, unique=True, verbose_name='Тематика')),
                ('slug', models.SlugField()),
                ('lft', models.PositiveIntegerField(editable=False)),
                ('rght', models.PositiveIntegerField(editable=False)),
                ('tree_id', models.PositiveIntegerField(db_index=True, editable=False)),
                ('level', models.PositiveIntegerField(editable=False)),
                ('parent', mptt.fields.TreeForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.PROTECT, related_name='children', to='books.theme', verbose_name='Родительская категория')),
            ],
            options={
                'verbose_name': 'Тематика',
                'verbose_name_plural': 'Тематика',
                'unique_together': {('parent', 'slug')},
            },
        ),
        migrations.CreateModel(
            name='BookTags',
            fields=[
                ('id', models.AutoField(db_column='id', primary_key=True, serialize=False)),
                ('book', models.ForeignKey(db_column='BookID', on_delete=django.db.models.deletion.CASCADE, to='books.book')),
                ('tag', models.ForeignKey(db_column='TagID', on_delete=django.db.models.deletion.CASCADE, to='books.tag')),
            ],
            options={
                'verbose_name': 'Тег книги',
                'verbose_name_plural': 'Теги книг',
                'db_table': 'BookTags',
                'unique_together': {('book', 'tag')},
            },
        ),
        migrations.AddField(
            model_name='book',
            name='cover',
            field=models.ForeignKey(db_column='CoverID', null=True, on_delete=django.db.models.deletion.CASCADE, to='books.cover', verbose_name='Обложка'),
        ),
        migrations.AddField(
            model_name='book',
            name='editor',
            field=models.ForeignKey(db_column='EditorID', null=True, on_delete=django.db.models.deletion.CASCADE, to='books.editor', verbose_name='Издательство'),
        ),
        migrations.AddField(
            model_name='book',
            name='format',
            field=models.ForeignKey(db_column='FormatID', null=True, on_delete=django.db.models.deletion.CASCADE, to='books.format', verbose_name='Формат'),
        ),
        migrations.AddField(
            model_name='book',
            name='seria',
            field=models.ForeignKey(db_column='SeriaID', null=True, on_delete=django.db.models.deletion.CASCADE, to='books.seria', verbose_name='Серия'),
        ),
        migrations.AddField(
            model_name='book',
            name='tags',
            field=models.ManyToManyField(related_name='books', through='books.BookTags', to='books.tag'),
        ),
        migrations.AddField(
            model_name='book',
            name='theme',
            field=mptt.fields.TreeForeignKey(null=True, on_delete=django.db.models.deletion.PROTECT, related_name='books', to='books.theme', verbose_name='Тематика'),
        ),
        migrations.AddField(
            model_name='book',
            name='type',
            field=models.ForeignKey(db_column='TypeID', null=True, on_delete=django.db.models.deletion.CASCADE, to='books.type', verbose_name='Тип книги'),
        ),
    ]
